apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
	sourceSets {
		main {
			jniLibs.srcDir 'src/main/libs'
			jni.srcDirs = []
		}
	}
}

dependencies {
    compile fileTree(dir: new File(buildDir, 'libs'), include: '*.jar')
}

tasks.withType(JavaCompile) {
	compileTask -> compileTask.dependsOn ndkBuild
}
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
	println('executing ndkBuild')
//	def ndkBuildingDir = project.plugins.findPlugin('com.android.library').sdkHandler.getNdkFolder().absolutePath
//	def ndkBuildingDir = 'D:/AndroidSDK/ndk-bundle'
//	def ndkBuildPath = ndkBuildingDir
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//		ndkBuildPath = ndkBuildingDir + '/ndk-build.cmd'
//	} else {
		//ndkBuildPath = ndkBuildingDir + '/ndk-build'
//	}

    def ndkBuildingDir = 'D:/AndroidSDK/ndk-bundle'
    def ndkBuildPath = ndkBuildingDir + '/ndk-build.cmd'
	commandLine ndkBuildPath, '-j8', '-C', file('src/main').absolutePath
}


